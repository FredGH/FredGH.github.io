R version 3.3.3 (2017-03-06) -- "Another Canoe"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Workspace loaded from ~/.RData]

> #TRUE: server settings / FALSE: local settings
> isServerRun = FALSE
> model.name <- "LDA"
> model.formula <-as.formula("upselling ~. ")
> 
> print(sprintf("model: %s formula: %s", model.name, deparse(model.formula)))
[1] "model: LDA formula: upselling ~ ."
> 
> #########################################
> ############## Drive Config #############
> #########################################
> if(isServerRun){
+   setwd('/host/dsm1/fmare001/stats/svm/deliverables')
+ }else{
+   #setwd('C:/Users/audrey.ekuban/dev/goldsmiths/mlsdm/assignment3')
+   #setwd('C:/Users/john/dev/goldsmiths/mlsdm/assignment3/submission')
+   setwd('C:/Users/Fred/Desktop/Studies/MSc-DataScience/Statistical Learning/Assignments/Assignment3/deliverables')
+ }
> 
> #########################################
> ########### Load Dependencies ###########
> #########################################
> source("init_data.r")
Loading required package: caret
Loading required package: lattice
Loading required package: ggplot2
Loading required package: DMwR
Loading required package: grid
> source("exploratory_functions.r")
Loading required package: dplyr

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: reshape2
> source("pre_processing_functions.r")
> source("feat_selection.r")
randomForest 4.6-12
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:dplyr’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

> require(e1071)
Loading required package: e1071
> 
> 
> forceReloadPreCanned1 = TRUE
> if (forceReloadPreCanned1) {
+   #List the pre-processing functions
+   model.preProcessingFunctions <- c(
+       convert_to_factors, 
+       drop_na_cols,
+       remove_correlated_predictors,
+       convert_NAs_to_level,
+       remove_linear_dependencies,
+       create_replacement_columns,
+       impute_data
+   )
+   model.data <- apply_pre_processing(train, model.preProcessingFunctions)
+   write.csv(model.data, file = "train.bin.neg.top10.upselling.csv", row.names = FALSE)
+ } else {
+   #reload from file
+   model.data <- read.csv("train.bin.neg.top10.app.upselling.csv", stringsAsFactors = FALSE)
+   model.data <- convert_to_factors(model.data)
+ }
[1] "Number of removed linearly dependent col(s): 0"
> 
> #Have a look to ensure there is no missing data
> lookAtMissingValues = FALSE
> if (lookAtMissingValues){
+   ggplot_missing(model.data)
+ }
> 
> 
> 
> sub <- model.data[,c("upselling","V84","V101","V14","V111","V70","V192","V222","V161","V141","V55","V191","V37","V91")]
> 
> res = evaluate_model(
+   # args to model.evaluate
+   data = sub,
+   formula = model.formula,
+   trainSMOTE = TRUE,
+   debug = TRUE,
+   # args passed through to other functions e.g. caret
+   method = "lda", 
+   metric = "Kappa", 
+   #preProcess=c("knnImpute"), 
+   trControl = trainControl(
+     method = "repeatedcv", 
+     number = 10, 
+     repeats = 5, 
+     selectionFunction = "oneSE"
+   )
+ )
[1] "evaluate_model:"
upselling ~ .
[1] "numFolds: 5"
[1] "debug: TRUE"
[1] "foldSize is 6600, based on 33001 rows and 5 folds"
[1] "targetColumnName: upselling"
[1] "Training model, holding out rows 1 to 6600 for evaluation"
Loading required package: MASS

Attaching package: ‘MASS’

The following object is masked from ‘package:dplyr’:

    select

          Truth
Prediction   -1    1
        -1 4931  238
        1  1176  255
[1] "tn: 4931, fp: 1176, fn: 238. tp: 255"
[1] "specificity: 0.807434092025545"
[1] "sensitivity: 0.517241379310345"
[1] "precision: 0.178197064989518"
[1] "accuracy: 0.785757575757576"
[1] "F1-score: 0.265072765072765"
[1] "auc: 0.662337735667945"
[1] "Training model, holding out rows 6601 to 13200 for evaluation"
          Truth
Prediction   -1    1
        -1 4813  225
        1  1300  262
[1] "tn: 4813, fp: 1300, fn: 225. tp: 262"
[1] "specificity: 0.787338459021757"
[1] "sensitivity: 0.537987679671458"
[1] "precision: 0.167733674775928"
[1] "accuracy: 0.768939393939394"
[1] "F1-score: 0.255734504636408"
[1] "auc: 0.662663069346607"
[1] "Training model, holding out rows 13201 to 19800 for evaluation"
          Truth
Prediction   -1    1
        -1 4871  218
        1  1251  260
[1] "tn: 4871, fp: 1251, fn: 218. tp: 260"
[1] "specificity: 0.795655014701078"
[1] "sensitivity: 0.543933054393305"
[1] "precision: 0.172071475843812"
[1] "accuracy: 0.777424242424242"
[1] "F1-score: 0.261437908496732"
[1] "auc: 0.669794034547192"
[1] "Training model, holding out rows 19801 to 26400 for evaluation"
          Truth
Prediction   -1    1
        -1 4947  222
        1  1191  240
[1] "tn: 4947, fp: 1191, fn: 222. tp: 240"
[1] "specificity: 0.805962854349951"
[1] "sensitivity: 0.519480519480519"
[1] "precision: 0.167714884696017"
[1] "accuracy: 0.785909090909091"
[1] "F1-score: 0.253565768621236"
[1] "auc: 0.662721686915235"
[1] "Training model, holding out rows 26401 to 33000 for evaluation"
          Truth
Prediction   -1    1
        -1 4860  230
        1  1229  281
[1] "tn: 4860, fp: 1229, fn: 230. tp: 281"
[1] "specificity: 0.79816061750698"
[1] "sensitivity: 0.549902152641879"
[1] "precision: 0.186092715231788"
[1] "accuracy: 0.778939393939394"
[1] "F1-score: 0.278080158337457"
[1] "auc: 0.674031385074429"
[1] "Average AUC for model: 0.666309582310282"
[1] "Average accuracy for model: 0.779393939393939"
[1] "Retraining final model on whole training set"
> 
> print(sprintf("Model %s AUC score = %s", model.name, res$auc))
[1] "Model LDA AUC score = 0.666309582310282"